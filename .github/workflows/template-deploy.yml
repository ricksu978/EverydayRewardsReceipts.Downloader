name: Template - Deploy Pipeline

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      bicepparam-file:
        required: true
        type: string


permissions:
  id-token: write
  contents: read

env:
  SQL_MIGRATION_SCRIPT: ${{ github.workspace }}/migration.sql

jobs:
  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:

      # Git- Checkout
      - name: Git - Checkout
        uses: actions/checkout@v4

      # Azure - Login
      - name: Azure - Login
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      # Azure - Deploy Resources
      - name: Azure - Deploy Resources
        id: deployment
        shell: pwsh
        run: |
          .\infra\powershell\Deploy-AzureResources.ps1 `
            -deploymentName "gha-${{ github.run_number}}.${{ github.sha }}" `
            -resourceGroup "${{ vars.AZURE_RESOURCE_GROUP }}" `
            -bicepParamFile ${{ inputs.bicepparam-file }} `
            -environment "${{ inputs.environment}}" `
            -planName "${{ vars.AZURE_PLAN_NAME }}" `
            -acrName "${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}" `
            -dockerImage "${{ vars.ACR_REPOSITORY }}:latest-${{ inputs.environment }}" `
            -globalResourceGroupName "${{ vars.AZURE_GLOBAL_RESOURCE_GROUP }}"

      # Azure - Login Container Registry
      - name: Azure - Login Container Registry
        run: |
          az acr login --name ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}

      # Docker - Download Artifact
      - name: Docker - Download Artifact
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      # Docker - Tag and Push Image
      - name: Docker - Tag and Push Image
        shell: pwsh
        run: |
          ./infra/powershell/TagAndPush-DockerImage.ps1 `
            -tarFile ${{ github.workspace}}/docker-image.tar `
            -repository ${{ steps.deployment.outputs.AZURE_CONTAINER_REGISTRY_NAME }}/${{ vars.ACR_REPOSITORY }} `
            -sha ${{ github.sha }} `
            -latest latest-${{ inputs.environment }} `
            -version ${{ github.ref_name }}

      # # Azure - Deploy App Service
      # - name: Azure - Deploy App Service
      #   uses: azure/webapps-deploy@v3
      #   with:
      #     app-name: ${{ steps.deployment.outputs.AZURE_APP_SERVICE_NAME }}
      #     publish-profile: ${{ steps.deployment.outputs.AZURE_PUBLISH_PROFILE }}
      #     package: ${{ github.workspace }}/app.zip

      # Dump GitHub Context
      - name: Dump GitHub Context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |
          echo '## Deploy Context' >> $GITHUB_STEP_SUMMARY
          echo '<details><summary>Deploy Context</summary>' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "$GITHUB_CONTEXT" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo '</details>' >> $GITHUB_STEP_SUMMARY
