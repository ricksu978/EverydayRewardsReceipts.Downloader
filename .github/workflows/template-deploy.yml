name: Template - Deploy Pipeline

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      resource-group:
        required: true
        type: string
      bicepparam-file:
        required: true
        type: string


permissions:
  id-token: write
  contents: read

env:
  SQL_MIGRATION_SCRIPT: ${{ github.workspace }}/migration.sql

jobs:
  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:

      # Git- Checkout
      - name: Git - Checkout
        uses: actions/checkout@v3

      # Azure - Login
      - name: Azure - Login
        uses: azure/login@v1.6.1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      # Docker - Download Artifact
      - name: Docker - Download Artifact
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      # Docker - Login to GitHub Container Registry
      - name: Docker - Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Bicep
        shell: pwsh
        run: |
          az bicep upgrade

          $DEPLOYMENT_OUTPUT = az deployment group create `
              -n "GitHubActions" `
              -f ".\infra\main.bicep" `
              -g "${{ inputs.resource-group }}" `
              -p "${{ inputs.bicepparam-file }}" `
              -p environment=${{ inputs.environment }} `
              -p planName=${{ vars.AZURE_PLAN_NAME }} `
              -p planResourceGroup=${{ vars.AZURE_PALN_RESOURCE_GROUP }} `
              --query properties.outputs | ConvertFrom-Json

      # az webapp deployment list-publishing-profiles --name everydayrewards-receipts-downloader-staging --resource-group EverydayRewards.Staging --xml

      - name: Azure - App Service
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ vars.AZURE_APP_NAME }}
          slot-name: ${{ inputs.environment }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ github.workspace }}/app.zip

      # Dump GitHub Context
      - name: Dump GitHub Context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |
          echo '## Deploy Context' >> $GITHUB_STEP_SUMMARY
          echo '<details><summary>Deploy Context</summary>' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "$GITHUB_CONTEXT" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo '</details>' >> $GITHUB_STEP_SUMMARY
